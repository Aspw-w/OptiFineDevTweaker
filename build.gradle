import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

buildscript {
    repositories {
        jcenter()
        maven {url = "http://files.minecraftforge.net/maven"}
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
    }
}
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

version = "2.2"
group = "ofdev" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "aa_do_not_rename_OptiFineDevTweaker"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

repositories {
    maven {
        url "https://libraries.minecraft.net/"
    }
    maven { url = 'https://files.minecraftforge.net/maven' }
    mavenCentral()
}

configurations {
    shadow
}

dependencies {
    shadow("org.ow2.asm:asm-debug-all:5.2")
    compileOnly 'cpw.mods:modlauncher:4.0.+'
    compileOnly('net.minecraft:launchwrapper:1.12') {
        transitive = false
    }
}

task shadowJarLW(type: ShadowJar) {
    configurations = [project.configurations.shadow]
    from sourceSets.main.output
    exclude('ofdev/modlauncher/**', 'ofdev/common/**') // can't use include because that seems to break shading here
    relocate('org.objectweb', 'ofdev.launchwrapper.org.objectweb')
    classifier = "launchwrapper"
}

task shadowJarML(type: ShadowJar) {
    from sourceSets.main.output
    include('ofdev/modlauncher/**')
    classifier = "modlauncher"
}

task shadowJarCommon(type: ShadowJar) {
    from sourceSets.main.output
    include('ofdev/common/**')
    classifier = "common"
}

shadowJar {
    from(shadowJarLW.archivePath.absolutePath) {
        include '*'
    }
    from (shadowJarML.archivePath.absolutePath) {
        include '*'
    }
    from (shadowJarCommon.archivePath.absolutePath) {
        include '*'
    }
    classifier = "all"

    manifest {
        attributes([
                "TweakClass": "ofdev.launchwrapper.OptifineDevTweakerWrapper",
                "TweakOrder": "-10000",
                "Specification-Title": "ofdevtweaker",
                "Specification-Vendor": "ofdevtweaker",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"ofdevtweaker",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
shadowJar.dependsOn(shadowJarML, shadowJarLW, shadowJarCommon)
build.dependsOn(shadowJar)

jar {
    manifest {
        attributes([
                "TweakClass": "ofdev.launchwrapper.OptifineDevTweakerWrapper",
                "TweakOrder": "-10000",
                "Specification-Title": "ofdevtweaker",
                "Specification-Vendor": "ofdevtweaker",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"ofdevtweaker",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}